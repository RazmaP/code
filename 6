import { Component } from '@angular/core';
import { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';
import { Observable, of } from 'rxjs';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent {
  private firstGridApi!: GridApi;
  private secondGridApi!: GridApi;

  public firstGridColumnDefs: ColDef[] = [
    { field: 'id', headerName: 'ID', checkboxSelection: true },
    { field: 'name', headerName: 'Name' }
  ];

  public secondGridColumnDefs: ColDef[] = [
    { field: 'detail', headerName: 'Detail' }
  ];

  public firstGridRowData$: Observable<any[]> = of([
    { id: 1, name: 'John' },
    { id: 2, name: 'Jane' },
    { id: 3, name: 'Bob' }
  ]);

  public secondGridRowData$: Observable<any[]> = of([]);

  onFirstGridReady(params: GridReadyEvent) {
    this.firstGridApi = params.api;
  }

  onSecondGridReady(params: GridReadyEvent) {
    this.secondGridApi = params.api;
  }

  onFirstGridSelectionChanged() {
    const selectedNodes = this.firstGridApi.getSelectedNodes();
    if (selectedNodes.length > 0) {
      const selectedData = selectedNodes[0].data;
      this.updateSecondGridData(selectedData.id);
    } else {
      this.secondGridRowData$ = of([]);
    }
  }

  updateSecondGridData(selectedId: number) {
    const data = [
      { id: 1, detail: 'Detail for John' },
      { id: 2, detail: 'Detail for Jane' },
      { id: 3, detail: 'Detail for Bob' }
    ];

    const filteredData = data.filter(item => item.id === selectedId);
    this.secondGridRowData$ = of(filteredData);
  }
}
app.component.html
html
Copy code
<div class="example-wrapper" style="width: 100%; height: 100%; overflow-x: auto;">
  <div style="width: 100%; height: 50%;">
    <ag-grid-angular
      style="width: 100%; height: 100%;"
      class="ag-theme-alpine"
      [columnDefs]="firstGridColumnDefs"
      [defaultColDef]="{ sortable: true, filter: true }"
      [rowData]="firstGridRowData$ | async"
      rowSelection="single"
      (gridReady)="onFirstGridReady($event)"
      (selectionChanged)="onFirstGridSelectionChanged()">
    </ag-grid-angular>
  </div>
  <div style="width: 100%; height: 50%;">
    <ag-grid-angular
      style="width: 100%; height: 100%;"
      class="ag-theme-alpine"
      [columnDefs]="secondGridColumnDefs"
      [defaultColDef]="{ sortable: true, filter: true }"
      [rowData]="secondGridRowData$ | async"
      (gridReady)="onSecondGridReady($event)">
    </ag-grid-angular>
  </div>
</div>
